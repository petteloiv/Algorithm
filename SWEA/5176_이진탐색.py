# ---------------문제 정의 -----------#

# 얘도 중위순회 .. 왼 -> 루 -> 오 하면서 값 넣기
# 입력할 숫자는 1부터 시작
# 얘도 노드 규칙 따른다!
# 쭉 탐색하다가 더 이상 없으면 그 때 값 넣기 반복
# 루트 , N//2 값 출력


# ----------------------알고리즘 풀이 ---------------------#
import sys
sys.stdin=open('input.txt')

# 중위순회
def bst(n):
    global cnt
    if n <= N:
        # 왼쪽 노드 먼저 탐색 ..
        bst(n*2)

        # n 인덱스에 값 넣기 (인덱스 == 노드번호)
        lst[n] = cnt
        cnt += 1

        # 오른쪽 탐색
        bst(n * 2 + 1)



T = int(input())

for tc in range(1,T+1):
    # 주어진 자연수 1~N까지 저장
    N = int(input())
    # 값 입력할 리스트
    lst = [0] * (N+1)
    # 입력할 값들
    cnt = 1
    # 시작 노드(루트)는 1번
    bst(1)
    # 루트에 저장된 값, N//2에 저장된 값 출력
    print(f'#{tc} {lst[1]} {lst[N//2]}')